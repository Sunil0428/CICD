pipeline{
    agent{
        label 'Agent-1'
    }
    options{
        timeout(time:30, unit:'MINUTES')
        disableConcurrentBuilds()
    }
    parameters{
        booleanParam(name: 'deploy', defaultValue: false, description: 'Select to deploy or not')
    }
    environment {
        appVersion = '' // this will become global, we can use across pipeline
        license=''
        region = 'us-east-1'
        account_id = '423623871433'
        project = 'expense'
        environment = 'dev'
        component = 'backend'
    }
    stages{
        stage('Read the version'){
            steps{
               script{
                  def packageJson = readJSON file: 'expense-backend/package.json'
                  appVersion=packageJson.version
                  license=packageJson.license
                  echo "appversion: ${appVersion}"
               }
            }
        }
        stage('Install dependencies'){
            steps{
                sh '''
                cd expense-backend
                npm install
                '''
            }
        }
         stage('Debug User') {
            steps {
                sh 'whoami'
                sh 'groups'
            }
        }
        stage('Docker build'){
            steps{
                withAWS(region: 'us-east-1', credentials: 'aws-creds'){
                sh """
                echo 'appversion: ${appVersion}'
                aws ecr get-login-password --region us-east-1 | docker login --username AWS --password-stdin ${account_id}.dkr.ecr.us-east-1.amazonaws.com
                docker build -t expense-dev/backend expense-backend/.
                docker tag expense-dev/backend:${appVersion} 423623871433.dkr.ecr.us-east-1.amazonaws.com/expense-dev/backend
                docker push 423623871433.dkr.ecr.us-east-1.amazonaws.com/expense-dev/backend:${appVersion}
                """
                }
            }
        }
    }
}